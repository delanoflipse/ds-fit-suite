services:
  controller:
    image: "${CONTROLLER_IMAGE:-fit-controller:latest}"
    ports:
      - "5050:5000"
    environment:
      - PROXY_LIST=service-a-proxy:8050,service-b-proxy:8050,service-c-proxy:8050,service-d-proxy:8050,service-e-proxy:8050,service-f-proxy:8050,service-g-proxy:8050,service-h-proxy:8050
      - OTEL_SDK_ENABLED=false
      - LOG_LEVEL

  service-a-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    ports:
      - "8080:8080"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-a:8080
      - SERVICE_NAME=service-a
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL

  service-a:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=complex
    environment:
      - OTEL_SERVICE_NAME=A

  service-b-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-b:8080
      - SERVICE_NAME=service-b
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL

  service-b:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=leaf
    environment:
      - OTEL_SERVICE_NAME=B

  service-d-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-d:8080
      - SERVICE_NAME=service-d
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL

  service-d:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=leaf
    environment:
      - OTEL_SERVICE_NAME=D

  service-e-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-e:8080
      - SERVICE_NAME=service-e
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL
  service-e:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=leaf
    environment:
      - OTEL_SERVICE_NAME=E

  service-c-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-c:8080
      - SERVICE_NAME=service-c
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL
  service-c:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=parallel
    environment:
      - OTEL_SERVICE_NAME=C
      - TARGET_SERVICE_URLS=http://service-d-proxy:8080/get,http://service-e-proxy:8080/get

  service-f-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-f:8080
      - SERVICE_NAME=service-f
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL
  service-f:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=pass-through
    environment:
      - OTEL_SERVICE_NAME=F
      - TARGET_SERVICE_URL=http://service-g-proxy:8080/get

  service-g-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-g:8080
      - SERVICE_NAME=service-g
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL
  service-g:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=leaf
    environment:
      - OTEL_SERVICE_NAME=G

  service-h-proxy:
    image: "${PROXY_IMAGE:-fit-proxy:latest}"
    environment:
      - OTEL_SDK_ENABLED=false
      - PROXY_HOST=0.0.0.0:8080
      - PROXY_TARGET=http://service-h:8080
      - SERVICE_NAME=service-h
      - CONTROLLER_HOST=controller:5000
      - CONTROL_PORT=8050
      - LOG_LEVEL
  service-h:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=leaf
    environment:
      - OTEL_SERVICE_NAME=H
